<launch>
  <arg name="jackal_port" default="/dev/ttyACM0" />
  <arg name="veh" default="jackal" />

  <!-- <group ns="$(arg veh)"> -->
    <include file="$(find jackal_description)/launch/description.launch" />
      <!-- <arg name="robot_namespace" default="$(arg veh)" />
    </include> -->

    <node pkg="jackal_base" type="jackal_node" name="jackal_node">     
      <rosparam>
          # TODO: Specify these in code rather than here.
          require:
            publishers:
              - status
              - feedback
              - imu/data_raw
              - navsat/nmea_sentence
            subscribers:
              - cmd_drive
              - wifi_connected
      </rosparam>
      <param name="port" value="$(arg jackal_port)" />
      <param name="wireless_interface" value="$(optenv JACKAL_WIRELESS_INTERFACE wlp2s0)" />
    </node>

    <!-- TODO: Eliminate this by compiling the necessary message definitions into jackal_base. -->
    <node pkg="rosserial_python" type="message_info_service.py" name="rosserial_message_info" />

    <!-- Translate Sentence messages from the MCU to NavSatFix messages -->
    <node pkg="nmea_navsat_driver" type="nmea_topic_driver" name="nmea_topic_driver" />

    <!-- Filter raw gyro data into a usable IMU message -->
    <node ns="navsat" pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter">
        <!-- <rosparam file="$(optenv JACKAL_MAG_CONFIG config/mag_config_default.yaml)" /> -->
      <rosparam>
          use_mag: false
          mag_bias_x: 0
          mag_bias_y: 0
          mag_bias_z: 0
          gain: 0.1
          zeta: 0.001
          publish_tf: false
      </rosparam>
    </node>

      <!-- Differential controller and basic localization -->
    <include file="$(find jackal_control)/launch/control.launch"/>

      <!-- Teleoperation via joystick and rviz interactive markers -->
    <include file="$(find jackal_control)/launch/teleop.launch" />

      <!-- Diagnostic Aggregator for robot monitor usage -->
    <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
      <rosparam command="load" file="$(find jackal_base)/config/diagnostic_analyzers.yaml" />
    </node>
  <!-- </group> -->
</launch>
